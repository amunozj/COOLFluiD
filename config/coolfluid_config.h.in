#ifndef COOLFluiD_CFconfig_hh
#define COOLFluiD_CFconfig_hh

#define COOLFLUID_VERSION ${COOLFLUID_VERSION}
#define COOLFLUID_VERSION_STR "${COOLFLUID_VERSION}"
#define CF_KERNEL_VERSION ${CF_KERNEL_VERSION}
#define CF_KERNEL_VERSION_STR "${CF_KERNEL_VERSION}"

#define CF_BUILD_TYPE       "${CF_BUILD_TYPE}"
#define CF_CMAKE_VERSION    "${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}"
#define CF_BUILD_PROCESSOR  "${CMAKE_SYSTEM_PROCESSOR}"

#cmakedefine CF_OS_LINUX
#cmakedefine CF_OS_MACOSX
#cmakedefine CF_OS_WINDOWS
#cmakedefine CF_OS_UNRECOGNIZED

#define CF_OS_NAME          "${CMAKE_SYSTEM_NAME}"
#define CF_OS_LONGNAME      "${CMAKE_SYSTEM}"
#define CF_OS_VERSION       "${CMAKE_SYSTEM_VERSION}"
#define CF_OS_BITS          "${CF_OS_BITS}"

// definitions from packages
// boost
#define CF_BOOST_VERSION          ${Boost_VERSION}
#define CF_BOOST_MAJOR_VERSION    ${Boost_MAJOR_VERSION}
#define CF_BOOST_MINOR_VERSION    ${Boost_MINOR_VERSION}
#define CF_BOOST_SUBMINOR_VERSION ${Boost_SUBMINOR_VERSION}
#define CF_BOOST_LIB_VERSION      "${Boost_LIB_VERSION}"
#cmakedefine CF_HAVE_BOOST_ERFC

// Platform specific config
#ifdef WIN32
  #pragma warning( disable : 4146 )  // ignore unary minus applied to unsigned type
  #pragma warning( disable : 4290 )  // ignore throw specifier not implemented
  #pragma warning( disable : 4003 )  // ignore invalid number of parameters to macro
  #pragma warning( disable : 4355 )  // ignore this used in base class initializer
  #pragma warning( disable : 4345 )  // ignore behavior change type constructed with an initializer () is default-initialized" )
  #pragma warning( disable : 4251 )  // ignore std classes need to have dll interface to work with" )
  #pragma warning( disable : 4275 )  // ignore non-dll interfaces in std
  #pragma warning( disable : 4273 )  // ignore inconsistent dll linkage
  #pragma warning( disable : 4786 )  // disable warnings on 255 char debug symbols
  #pragma warning( disable : 4231 )  // disable warnings on extern before template instantiation
  #cmakedefine CF_HAVE_WINDOWSH       // has windows.h header
#endif

#cmakedefine UNIX
#ifdef UNIX
  #cmakedefine CF_HAVE_DLOPEN
#endif

// Compiler features
#define CXX_NEEDS_FRIEND_TMPL_DECL           // cxx friend templates
#define cf_restrict ${CF_RESTRICT_KEYWORD}   // define our restrict keyword

#cmakedefine CF_HAVE_CXX_EXPLICIT_TEMPLATES

// #cmakedefine CF_HAVE_MPI            // MPI support
#cmakedefine CF_HAVE_FUNCTION_DEF   // check existence of __FUNCTION__ definition by compiler
#cmakedefine CF_HAVE_ALLOC_MMAP     // supports mmap
#cmakedefine CF_HAVE_VSNPRINTF      // supports vsnprintf function
#cmakedefine CF_HAVE_ALLOC_MMAP     // supports mmap
#cmakedefine CF_HAVE_MATH_ERFC      // has erfc through math.h
#cmakedefine CF_HAVE_MATH_ASINH     // has asinh through math.h
#cmakedefine CF_HAVE_MATH_ACOSH     // has acosh through math.h
#cmakedefine CF_HAVE_MATH_ATANH     // has atanh through math.h
#cmakedefine CF_HAVE_CXXABI_H       // has cxxabi
#cmakedefine CF_HAVE_UNISTD_H       // has unistd.h header
#cmakedefine CF_HAVE_SYS_TIME_H     // time header
#cmakedefine CF_HAVE_TIME_H         // time header
#cmakedefine CF_HAVE_SYS_RESOURCE_H // time header
#cmakedefine CF_HAVE_GETTIMEOFDAY   // time header
#cmakedefine CF_TIME_WITH_SYS_TIME  // time header setting
#cmakedefine CF_HAVE_CURL           // curl support
#cmakedefine CF_HAVE_CUDA           // CUDA support
#cmakedefine CF_HAVE_MUTATION1      // Mutation support
#cmakedefine CF_HAVE_MUTATION2      // Mutation2 support
#cmakedefine CF_HAVE_MUTATION2OLD   // Mutation2OLD support
#cmakedefine CF_HAVE_PARALUTION     // Paralution support
#cmakedefine CF_HAVE_ALLSTATIC      // compile static
#cmakedefine CF_HAVE_IBMSTATIC      // compile static with IBM compiler
#cmakedefine CF_HAVE_CRAYSTATIC     // compile static with CRAY compiler
#cmakedefine CF_HAVE_SINGLE_EXEC    // compile a single executable with no separate libraries
#cmakedefine CF_HAVE_LOG4CPP        // use the log4cpp functionalities

// Package options
#cmakedefine CF_HAVE_GOOGLE_PERFTOOLS
#cmakedefine CF_HAVE_PARMETIS
#cmakedefine CF_HAVE_VALGRIND

// User options
#cmakedefine CF_ENABLE_STDASSERT
#cmakedefine CF_ENABLE_GROWARRAY
#cmakedefine CF_ENABLE_PARALLEL_VERBOSE
#cmakedefine CF_ENABLE_PARALLEL_DEBUG

#cmakedefine CF_PRECISION_DOUBLE
#ifndef CF_PRECISION_DOUBLE
  #cmakedefine CF_PRECISION_LONG_DOUBLE
  #ifndef CF_PRECISION_LONG_DOUBLE
    #cmakedefine CF_PRECISION_SINGLE
  #endif
#endif

#cmakedefine CF_HAVE_LONG           // long int support
#cmakedefine CF_HAVE_LLONG          // long long int support

#endif // !COOLFluiD_CFconfig_hh
